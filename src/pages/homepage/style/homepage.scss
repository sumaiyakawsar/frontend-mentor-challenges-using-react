@use "../../../styles/functions" as f;
@use "variables" as v;
@use "../../../styles/font" as fo;
@use "../../../styles/mixin" as *;

.projects {
    font-family: fo.$outfit-font;
    font-size: v.$font-size-p;
    flex-wrap: wrap;
    align-items: center;
    padding: f.rem(80);
    width: 100%;
    margin: 0 auto;
    @include flex-col(f.rem(48));

    &__filters {
        flex-wrap: wrap;
        @include flex-row(f.rem(16));

        .filter-btn {
            padding: 0.5rem 1rem;
            border: 1px solid #ccc;
            background-color: #f9f9f9;
            color: #222;
            font-weight: 600;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
            cursor: pointer;
            border-radius: f.rem(4);
            transition: all 0.3s ease;

            &:hover {
                background-color: #f0f0f0;
                transform: translateY(-2px);
                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            }
        }

        @each $key, $color in v.$filter-colors {
            .#{$key}.active {
                background-color: $color;
                border-color: $color;
                color: white;
            }
        }
    }

    .filter-bar-wrapper {
        min-height: 60px;
        min-width: 60vw;

        .filter-bar {
            padding: f.rem(16) f.rem(32);
            background: white;
            border-radius: f.rem(6);
            box-shadow: v.$box-shadow;
            justify-content: space-between;
            align-items: center;
            width: 100%;
            @include flex-row(f.rem(16));

            .tags {
                flex-wrap: wrap;
                @include flex-row(f.rem(16));

                .tag {
                    display: flex;
                    align-items: center;
                    border-radius: f.rem(6);
                    overflow: hidden;
                    font-weight: bold;
                    box-shadow: v.$box-shadow;

                    span {
                        padding: f.rem(8) f.rem(12);
                        color: white;
                    }

                    button {
                        background: rgba(0, 0, 0, 0.1);
                        color: white;
                        border: none;
                        padding: f.rem(8);
                        cursor: pointer;

                        &:hover {
                            background: rgba(0, 0, 0, 0.2);
                        }
                    }

                    @each $tag, $color in v.$tag-colors {
                        &.#{$tag} {
                            background-color: $color;
                        }
                    }
                }
            }

            .clear {
                all: unset;
                font-weight: v.$font-bold;
                cursor: pointer;

                &:hover {
                    color: hotpink;
                    text-decoration: underline;
                }
            }

            &.empty {
                visibility: hidden;
            }
        }
    }

    &__filtered {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: f.rem(32);
        width: 100%;
        justify-items: center;

        .project {
            border-radius: f.rem(16);
            width: 100%;
            max-width: 320px;
            box-shadow: v.$box-shadow;

            transition: v.$transition;
            overflow: hidden;

            &:hover,
            &:focus,
            &:focus-visible {
                transform: translateY(-5px) scale(1.02);
                outline: 2px solid black;
            }

            &__top {
                position: relative;

                &__img {
                    height: 200px;
                    width: 100%;
                    object-fit: cover;
                    object-position: top;
                }

                &__num {
                    position: absolute;
                    top: f.rem(8);
                    right: f.rem(8);
                    color: white;
                    border-radius: 50%;
                    width: f.rem(26);
                    height: f.rem(26);
                    display: grid;
                    place-content: center;
                    font-size: f.rem(12);
                    font-weight: bold;
                    z-index: 2;
                    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);

                    @each $level, $color in v.$filter-colors {
                        &.#{$level} {
                            background-color: $color;
                        }
                    }
                }
            }

            &__body {
                @include flex-col(f.rem(16));
                padding: f.rem(12);

                &__header {
                    display: flex;
                    justify-content: space-between;

                    h4 {
                        padding: f.rem(6) 0;
                        color: darkred;
                    }

                    .level {
                        display: flex;
                        flex-wrap: wrap;

                        border-radius: f.rem(8);
                        overflow: hidden;
                        text-transform: capitalize;
                        font-size: f.rem(10);

                        span {
                            flex-grow: 1;
                            text-align: center;
                            padding: f.rem(5);
                        }

                        @each $level, $color in v.$filter-colors {
                            &.#{$level} {
                                border: $color 1px dotted;
                            }
                        }

                        &__no {
                            @each $level, $color in v.$filter-colors {
                                &.#{$level} {
                                    background-color: $color;
                                }
                            }
                        }
                    }
                }
            }

            &__description {
                padding-inline: f.rem(12);
            }

            &__tags {
                flex-wrap: wrap;
                @include flex-row(f.rem(8));
                padding: f.rem(12);

                .tag {
                    background-color: #f5f5f5;
                    border-radius: f.rem(8);
                    font-weight: v.$font-bold;
                    padding: f.rem(6);
                    cursor: pointer;
                    transition: background 0.2s ease;

                    &:hover {
                        background-color: #e6e6e6;
                    }

                    @each $tag, $color in v.$tag-colors {
                        &.#{$tag} {
                            color: $color;
                        }
                    }
                }
            }
        }
    }
}

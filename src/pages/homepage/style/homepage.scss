@use "../../../styles/functions" as f;
@use "variables" as v;
@use "../../../styles/font" as fo;
@use "../../../styles/mixin" as *;
@use "../../../styles/theme";

.projects {
    min-height: 100vh;
    transition: all 0.3s ease;
    font-family: fo.$outfit-font;
    font-size: v.$font-size-p;
    width: 100dvw;
    margin: 0 auto;
    .header {
        background: var(--bg-header);
        color: var(--text-primary);
        padding: f.rem(32);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
        position: relative;
        @include flex-col(f.rem(48));
        .header-top {
            display: flex;
            flex-direction: column;
            align-items: center;

            h1 {
                font-size: f.rem(40);
                font-weight: 700;
                text-align: center;
                text-shadow: 2px 2px 8px rgba(var(--bg-primary), 0.3); // soft glow
                background: var(--gradient-primary);
                -webkit-background-clip: text;
                background-clip: text;
                color: transparent;
            }

            .subtitle {
                color: var(--text-secondary);
                font-size: 1.1rem;
                text-align: center;
            }

            .theme-toggle-wrapper {
                display: flex;
                justify-content: center;

                .theme-toggle {
                    position: relative;
                    display: inline-block;
                    width: 50px;
                    height: 24px; // slider height
                    transition: all 0.3s ease;

                    input {
                        opacity: 0;
                        width: 0;
                        height: 0;
                    }

                    .slider {
                        position: relative;
                        display: flex;
                        align-items: center;
                        justify-content: space-between;
                        padding: 0 3px;
                        height: 100%;
                        background: var(--bg-toggle);
                        border-radius: 24px;
                        cursor: pointer;
                        transition: background-color 0.3s;

                        .icon {
                            font-size: 0.65rem; // small icons
                            pointer-events: none;
                        }

                        &::before {
                            content: "";
                            position: absolute;
                            top: 3px; // inside padding
                            left: 3px;
                            width: 18px; // circle width
                            height: 18px; // circle height < slider height
                            background: var(--toggle-thumb);
                            border-radius: 50%;
                            transition: transform 0.3s ease;
                        }
                    }

                    input:checked + .slider {
                        background-color: #4caf50;
                        &::before {
                            transform: translateX(26px); // slider width - circle width - padding
                        }
                    }
                }
            }
        }

        .kpi-container {
            padding-bottom: 0.5rem;

            .kpi {
                display: flex;
                flex-wrap: wrap;
                justify-content: center;
                align-items: center;
                gap: f.rem(16);
                max-width: 60vw;
                margin: 0 auto;
                .kpi-item {
                    flex: 1;
                    min-width: 120px;
                    background: var(--bg-card);
                    border-radius: f.rem(12);
                    padding: f.rem(16);
                    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
                    cursor: pointer;
                    transition: all 0.3s ease;
                    position: relative;
                    overflow: hidden;
                    border: 2px solid transparent;
                    color: var(--text-color);
                    @include flex-col(f.rem(8));

                    &:hover {
                        transform: translateY(-3px);
                        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
                    }

                    @each $key, $color in v.$filter-colors {
                        &.#{$key}.active {
                            border-color: $color;

                            &::after {
                                content: "";
                                position: absolute;
                                top: 0;
                                right: 0;
                                width: 0;
                                height: 0;
                                border-style: solid;
                                border-width: 0 16px 16px 0;
                                border-color: transparent $color transparent transparent;
                            }
                        }
                    }
                    .kpi-number {
                        display: block;
                        font-size: 1.8rem;
                        font-weight: 700;
                        color: var(--text-primary);
                        margin-bottom: 0.25rem;
                    }

                    .kpi-label {
                        display: block;
                        font-size: 0.9rem;
                        color: var(--text-secondary);
                        text-transform: capitalize;
                        margin-bottom: 0.75rem;
                    }

                    .progress-bar {
                        height: 6px;
                        background: var(--bg-progress);
                        border-radius: 3px;
                        overflow: hidden;

                        .progress-fill {
                            height: 100%;
                            border-radius: 3px;
                            transition: width 0.5s ease;
                        }

                        @each $level, $color in v.$filter-colors {
                            &.#{$level} .progress-fill {
                                background-color: $color;
                            }
                        }
                    }

                    @each $key, $color in v.$filter-colors {
                        &.#{$key} {
                            border-left: 4px solid $color;
                        }
                    }
                }
            }
        }

        // Floating shapes using pseudo-elements
        &::before,
        &::after {
            content: "";
            position: absolute;
            border-radius: 50%;
            opacity: 0.15;
            z-index: 1;
        }

        &::before {
            width: 80px;
            height: 80px;
            background: var(--toggle-thumb);
            top: 10%;
            left: 5%;
        }

        &::after {
            width: 120px;
            height: 120px;
            background: var(--toggle-thumb);
            bottom: 10%;
            right: 10%;
        }
    }

    .container {
        @include flex-col(f.rem(48));
        align-items: center;
        justify-content: center;
        padding: f.rem(32);
    }

    .filter-section {
        @include flex-col(f.rem(24));
        .filter-header {
            display: flex;
            justify-content: space-between;
            align-items: center;

            h2 {
                color: var(--text-primary);
                font-size: 1.5rem;
            }

            .clear-filters-btn {
                background: var(--accent-secondary);
                color: white;
                border: none;
                padding: 0.5rem 1rem;
                border-radius: 4px;
                cursor: pointer;
                font-size: 0.9rem;
                transition: background 0.3s ease;

                &:hover {
                    background: var(--accent-secondary-dark);
                }
            }
        }

        .level-filters {
            @include flex-row(f.rem(16));
            flex-wrap: wrap;

            .level-filter-btn {
                padding: 0.5rem 1rem;
                border-radius: f.rem(20);
                border: 1px solid var(--border-primary);
                background: var(--bg-card);
                color: var(--text-primary);
                cursor: pointer;
                transition: all 0.3s ease;
                display: flex;
                align-items: center;
                gap: 0.5rem;
                font-size: 0.9rem;
                font-weight: 600;
                box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);

                &:hover {
                    transform: translateY(-2px);
                    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
                    background-color: #f0f0f0;
                }

                .level-count {
                    background: rgba(255, 255, 255, 0.2);
                    border-radius: 10px;
                    padding: 0.1rem 0.5rem;
                    font-size: 0.8rem;
                }
            }

            @each $key, $color in v.$filter-colors {
                .#{$key}.active {
                    background-color: $color;
                    border-color: $color;
                    color: white;
                }
            }
        }

        .tag-filter-bar-wrapper {
            min-height: 50px;
            min-width: 60vw;
            .no-filters-message {
                padding: 1rem;
                text-align: center;
                color: var(--text-secondary);
                background: var(--bg-card);
                border-radius: 8px;
                border: 1px dashed var(--border-primary);
            }

            .filter-bar {
                padding: f.rem(16) f.rem(32);
                background: var(--bg-card);
                border-radius: f.rem(6);
                box-shadow: v.$box-shadow;
                justify-content: space-between;
                align-items: center;
                width: 100%;
                @include flex-row(f.rem(16));

                .tags {
                    flex-wrap: wrap;
                    @include flex-row(f.rem(16));

                    .tag {
                        display: flex;
                        align-items: center;
                        border-radius: f.rem(6);
                        overflow: hidden;
                        font-weight: bold;
                        box-shadow: v.$box-shadow;

                        span {
                            padding: f.rem(8) f.rem(12);
                            color: white;
                        }

                        button {
                            background: rgba(0, 0, 0, 0.1);
                            color: white;
                            border: none;
                            padding: f.rem(8);
                            cursor: pointer;

                            &:hover {
                                background: rgba(0, 0, 0, 0.2);
                            }
                        }

                        @each $tag, $color in v.$tag-colors {
                            &.#{$tag} {
                                background-color: $color;
                            }
                        }
                    }
                }

                .clear {
                    all: unset;
                    font-weight: v.$font-bold;
                    cursor: pointer;
                    color: hotpink;
                    &:hover {
                        text-decoration: underline;
                    }
                }

                &.empty {
                    visibility: hidden;
                }
            }
        }
    }

    .projects-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: f.rem(32);
        width: 100%;
        justify-items: center;
        .project {
            background: var(--card-bg);
            border-radius: f.rem(16);
            width: 100%;
            max-width: 320px;
            box-shadow: v.$box-shadow;

            transition: v.$transition;
            overflow: hidden;

            &:hover,
            &:focus,
            &:focus-visible {
                transform: translateY(-5px) scale(1.02);
                outline: 1px solid black;
                outline-offset: 2px;
            }

            &__top {
                position: relative;

                // Make wrapper take full width + height
                .lazy-load-image-background,
                .lazy-load-image-loaded {
                    width: 100%;
                    height: 200px;
                    display: block;
                }
                &__img {
                    height: 100%; // fill container
                    width: 100%;
                    display: block;
                    object-fit: cover;
                    object-position: top;
                }

                &__num {
                    position: absolute;
                    top: f.rem(8);
                    right: f.rem(8);
                    color: white;
                    border-radius: 50%;
                    width: f.rem(26);
                    height: f.rem(26);
                    display: grid;
                    place-content: center;
                    font-size: f.rem(12);
                    font-weight: bold;
                    z-index: 2;
                    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);

                    @each $level, $color in v.$filter-colors {
                        &.#{$level} {
                            background-color: $color;
                        }
                    }
                }
            }

            &__body {
                @include flex-col(f.rem(16));
                padding: f.rem(12);

                &__header {
                    display: flex;
                    justify-content: space-between;

                    h4 {
                        padding: f.rem(6) 0;
                        color: var(--accent-primary);
                    }

                    .level {
                        display: flex;
                        flex-wrap: wrap;
                        align-items: center;
                        border-radius: f.rem(8);
                        overflow: hidden;
                        text-transform: capitalize;
                        font-size: f.rem(10);
                        height: 100%;
                        span {
                            flex-grow: 1;
                            text-align: center;
                            padding: f.rem(5);
                        }

                        @each $level, $color in v.$filter-colors {
                            &.#{$level} {
                                border: $color 1px dotted;
                                color: $color;
                            }
                        }

                        &__no {
                            @each $level, $color in v.$filter-colors {
                                &.#{$level} {
                                    background-color: $color;
                                    color: white;
                                }
                            }
                        }
                    }
                }
            }

            &__description {
                padding-inline: f.rem(12);
            }

            &__tags {
                flex-wrap: wrap;
                @include flex-row(f.rem(8));
                padding: f.rem(12);

                .tag {
                    background-color: #f5f5f5;
                    border-radius: f.rem(8);
                    font-weight: v.$font-bold;
                    padding: f.rem(6);
                    cursor: pointer;
                    transition: background 0.2s ease;

                    &:hover {
                        background-color: #e6e6e6;
                    }

                    @each $tag, $color in v.$tag-colors {
                        &.#{$tag} {
                            color: $color;
                        }
                    }
                }
            }
        }
    }

    .no-projects-message {
        grid-column: 1 / -1;
        text-align: center;
        padding: 3rem;
        background: var(--bg-card);
        border-radius: 12px;
        margin: 2rem 0;

        h3 {
            color: var(--text-primary);
            margin-bottom: 0.5rem;
        }

        p {
            color: var(--text-secondary);
            margin-bottom: 1.5rem;
        }

        .reset-filters-btn {
            background: var(--accent-primary);
            color: white;
            border: none;
            padding: 0.75rem 1.5rem;
            border-radius: 6px;
            cursor: pointer;
            font-weight: 600;
            transition: background 0.3s ease;

            &:hover {
                background: var(--accent-primary-dark);
            }
        }
    }
}
